import GeneralInformation from '../GeneralInformation/GeneralInformation'

const FormManager = () => {
    const [isGeneralInformation, toggleGeneralInformation] = useState(false)
    const [isSelectionMenu, toggleSelectionMenu] = useState(false)
    const [isSection, toggleSection] = useState(false)
    const [isReview, toggleReview] = useState(false)
    const [isDownloadPage, toggleDownloadPage] = useState(false)
    const [dataHistory, updateDataHistory] = useState({})
    const {sectionsToDisplay, setSectionsToDisplay} = useState([ProfilePicture, Career, Education, Tools, Languages, Hobbies])   
    const [uniqueKeys, setUniqueKeys] = useState(Array(100).fill('').map((_, index) => index))

    const getUniqueKey = () => {
    const copyOfKeysArray = [...uniqueKeys];
    const uniqueKey = copyOfKeysArray[0];
    setUniqueKeys(copyOfKeysArray.map((key) => key !== uniqueKey))
  });
    return uniqueKey;
}

    const saveSelectionsAndDisplayFirstSection = (selectedSections) => {
        setSectionsToDisplay(selectedSections);
        toggleSelectionMenu(false);
        toggleSection(true)
    } 

    const updateDataHistoryAndDisplaySelectionMenu= (dataToSave, currentSectionName) => {
        updateDataHistory({...dataHistory, [currentSectionName]: dataToSave})
        toggleGeneralInformation(false);
        toggleSection(true)
    }

    const updateDataHistoryAndDisplayNextPage = (dataToSave, currentSectionName) => {
        const withoutCurrentPage = sectionsToDisplay.map((section, index) => {
            if (index !== 0) return section;
        })
        updateDataHistory({...dataHistory, [currentSectionName]: dataToSave})
        if (sectionsToDisplay.length) setSectionsToDisplay(withoutCurrentPage)
        else {
            toggleSection(false)
            toggleReview(true)
        }
    }

    const displayNextPage = () => {
        const withoutCurrentPage = sectionsToDisplay.map((section, index) => {
            if (index !== 0) return section;
        })
        if (sectionsToDisplay.length) setSectionsToDisplay(withoutCurrentPage)
        else {
            toggleSection(false)
            toggleReview(true)
        }
    }

    const displayReviewPage = () => {
        toggleSelectionMenu(false);
        toggleReview(true);
    }

      const displayDownloadPage = () => {
        toggleReview(false);
        toggleDownloadPage(true)
    }
    
    return (
        {isGeneralInformation && <GeneralInformation updateDataHistory={updateDataHistory} updateDataHistoryAndDisplaySelectionMenu={updateDataHistoryAndDisplaySelectionMenu}/>}

        {isSelectionMenu && <SelectionMenu saveSelectionsAndDisplayFirstSection={saveSelectionsAndDisplayFirstSection} sectionsToDisplay={sectionsToDisplay/> displayReviewPage={displayReviewPage}}

        {isSection && <sectionsToDisplay[0] displayNextPage={displayNextPage} updateDataHistory={updateDataHistory} updateDataHistoryAndDisplayNextPage={updateDataHistoryAndDisplayNextPage getUniqueKey={getUniqueKey}/}

        {isReview && <Review dataHistory={dataHistory} getUniqueKey={getUniqueKey}/>}

        {isDownloadPage && <DownloadPage/>}
    )
};
