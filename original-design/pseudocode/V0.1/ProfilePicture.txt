class ProfilePicture {
    constructor() {
        this.state = {
            uploadMode: true,
            cropMode: false,
            croppedPicture: ''
        }
    }

    function saveCroppedPicture() {
        use cropper to save the picture in state
    }

    function displayCropper() {
        this.setState(() => {
            return {...this.state, cropMode: true, uploadMode: false}
        })
    }

    render() {
       const {displayNextSection, displayNextSectionAndSaveData, saveInPreview, previewMode} = this.props;
        return (
            <div class='profile-picture-section>
            <div class='picture-wrapper'>
            {!previewMode && this.state.uploadMode && <ProfilePictureUploader displayCropper={displayCropper}/>}
            {!this.state.uploadMode && !this.state.cropMode && <ProfilePictureViewer/>}
            {previewMode && <ProfilePictureViewer/>}
            </div>
            {!this.state.uploadMode && this.state.cropMode && <ProfilePictureCropper saveCroppedPicture={saveCroppedPicture}/>}
            {!previewMode && !this.state.croppedPicture && <SkipSectionButton displayNextSection={displayNextSection}/>}
            {!previewMode && this.state.croppedPicture && <DisplayNextSectionButton displayNextSectionAndSaveData={displayNextSectionAndSaveData}/>}
            {!previewMode && this.state.croppedPicture && <TryAgainButton/>}
            {previewMode && <SaveInPreviewButton saveInPreview={saveInPreview}/>}
            </div>
        )
    }
}